// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectWeb.Infra.Data.Context;

namespace ProjectWeb.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220823161835_TicketAnswer")]
    partial class TicketAnswer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectWeb.Domain.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TicketDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TicketSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TicketText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TicketId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("ProjectWeb.Domain.Models.TicketAnswer", b =>
                {
                    b.Property<int>("TicketAnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TicketAnswerDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TicketAnswerText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TicketAnswerId");

                    b.ToTable("TicketAnswers");
                });

            modelBuilder.Entity("ProjectWeb.Domain.Models.Ticket_TicketAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TicketAnswerId")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TicketAnswerId");

                    b.HasIndex("TicketId");

                    b.ToTable("Ticket_TicketAnswers");
                });

            modelBuilder.Entity("ProjectWeb.Domain.Models.Ticket_TicketAnswer", b =>
                {
                    b.HasOne("ProjectWeb.Domain.Models.TicketAnswer", "TicketAnswer")
                        .WithMany("Ticket_TicketAnswers")
                        .HasForeignKey("TicketAnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectWeb.Domain.Models.Ticket", "Ticket")
                        .WithMany("Ticket_TicketAnswers")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");

                    b.Navigation("TicketAnswer");
                });

            modelBuilder.Entity("ProjectWeb.Domain.Models.Ticket", b =>
                {
                    b.Navigation("Ticket_TicketAnswers");
                });

            modelBuilder.Entity("ProjectWeb.Domain.Models.TicketAnswer", b =>
                {
                    b.Navigation("Ticket_TicketAnswers");
                });
#pragma warning restore 612, 618
        }
    }
}
